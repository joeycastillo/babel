#define ENABLE_GxEPD2_GFX 0

#include <GxEPD2_BW.h>
#include <GxEPD2_3C.h>
#include <Fonts/FreeMonoBold9pt7b.h>

#include "BabelSPIFlash.h"
#include "BabelTypesetterGFX.h"

#define MAX_DISPAY_BUFFER_SIZE 15000ul // ~15k is a good compromise
#define MAX_HEIGHT(EPD) (EPD::HEIGHT <= MAX_DISPAY_BUFFER_SIZE / (EPD::WIDTH / 8) ? EPD::HEIGHT : MAX_DISPAY_BUFFER_SIZE / (EPD::WIDTH / 8))
GxEPD2_BW<GxEPD2_420, MAX_HEIGHT(GxEPD2_420)> display(GxEPD2_420(/*CS=77*/ 9, /*DC=*/ 10, /*RST=*/ A4, /*BUSY=*/ A3));

BabelTypesetterGFX typesetter(&display, 4, &SPI);

void setup(void) {
  Serial.begin(9600);
  Serial.print("Babel codepoint test!");
  display.init(115200);
  display.setRotation(3);
  typesetter.begin();
  typesetter.textColor = GxEPD_BLACK;
//  while(!Serial);
}

BABEL_CODEPOINT string[] = {0x0056, 0x006F, 0x0069, 0x0063, 0x0069, 0x0020, 0x006D, 0x006F, 0x006E, 0x0020, 0x0073, 0x0065, 0x0063, 0x0072, 0x0065, 0x0074, 0x002E, 0x0020, 0x0049, 0x006C, 0x0020, 0x0065, 0x0073, 0x0074, 0x0020, 0x0074, 0x0072, 0x0065, 0x0300, 0x0073, 0x0020, 0x0073, 0x0069, 0x006D, 0x0070, 0x006C, 0x0065, 0x003A, 0x000A, 0x006F, 0x006E, 0x0020, 0x006E, 0x0065, 0x0020, 0x0076, 0x006F, 0x0069, 0x0074, 0x0020, 0x0062, 0x0069, 0x0065, 0x006E, 0x0020, 0x0071, 0x0075, 0x0027, 0x0061, 0x0076, 0x0065, 0x0063, 0x0020, 0x006C, 0x0065, 0x0020, 0x0063, 0x0153, 0x0075, 0x0072, 0x002E, 0x000A, 0x004C, 0x0027, 0x0065, 0x0073, 0x0073, 0x0065, 0x006E, 0x0074, 0x0069, 0x0065, 0x006C, 0x0020, 0x0065, 0x0073, 0x0074, 0x0020, 0x0069, 0x006E, 0x0076, 0x0069, 0x0073, 0x0069, 0x0062, 0x006C, 0x0065, 0x0020, 0x0070, 0x006F, 0x0075, 0x0072, 0x0020, 0x006C, 0x0065, 0x0073, 0x000A, 0x0079, 0x0065, 0x0075, 0x0078, 0x002E};

void loop() {
  Serial.println("clearing");
  display.fillScreen(GxEPD_WHITE);
  typesetter.writeCodepoints(string, 112);
  while (display.nextPage());
  Serial.println("drawn, wait");
  delay(1000);
  typesetter.setCursor(0, 0);
  display.fillScreen(GxEPD_WHITE);
  Serial.println("moveon");
  delay(2000);
}
